alg: WGCSL
alg_kwargs:
  tau: 0.05
  target_freq: 20
  beta: 1
  clip_score: 10
  drw: True
  sparse_reward: True
  encoder_gradients: actor

optim: Adam
optim_kwargs:
  lr: 0.0003

network: ActorCriticPolicy
network_kwargs:
  encoder_class: DrQv2Encoder
  actor_class: DrQv2Actor
  actor_kwargs:
    feature_dim: 50
    output_act: ["import", "torch.nn", "Tanh"]
    hidden_layers: [1024, 1024]
  critic_class: DrQv2Critic
  critic_kwargs:
    feature_dim: 50
    hidden_layers: [1024, 1024]
    ensemble_size: 1

# No train env, only eval env
eval_env: HandReachImage-v0
eval_env_kwargs:
  goal_path: path/to/image/dataset/goals_200.pkl


dataset: WGCSLDataset
dataset_kwargs:
  paths: [paths/to/expert/dataset, path/to/random/dataset]
  percents: [depends-on-experiment]
  discount: 0.98
  reward_fn: ["import", "research.envs.gym_robotics", "fetch_dummy"]
  batch_size: 256
  relabel_fraction: 1.0


processor: ComposeProcessor
processor_kwargs:
  processors: # Format is List[Tuple(Name, kwargs)]
   -
    - RandomCrop
    -
   -
    - ConcatenateProcessor
    - obs_dim: 0

schedule: null # A learning rate schedule
checkpoint: null # A checkpoint to initialize the model from

trainer_kwargs: # Arguments given to Algorithm.train
  total_steps: 1000000 # GoFar saturates at 20*20*(500 epochs) = 200000k steps
  log_freq: 100 # How often to log values
  eval_freq: 5000 # How often to run evals
  eval_fn: eval_policy
  eval_kwargs:
    num_ep: 100 # Number of enviornment episodes to run for evaluation, or -1 if none should be run.
  loss_metric: reward # The validation metric that determines when to save the "best_checkpoint"
  train_dataloader_kwargs:
    num_workers: 2 # Number of dataloader workers.
    batch_size: null
    collate_fn: null
  profile_freq: 500
  benchmark: True
seed: null
