# Example Config that uses almost all values

alg: AlgorithmName from algs/__init__.py
alg_kwargs:
  kwarg_1: value
  # More keyword arguments for the algorithm...

optim: OptimizerName from torch.optim
optim_kwargs:
  lr: 0.001
  weight_decay: 0.05
  # More key word arguments for the optimizer...

network: NetworkName from networks/__init__.py
network_kwargs:
  hidden_layers: [256, 256]
  act: ["import", "torch.nn", "Tanh"] # A demonstration of how to import a function
  # More key word arguments for the network

# If you are running supervised learning, the env is likely Empty and can just be used to specify input/output spaces.
env: EnvironmentName from envs/__init__.py
env_kwargs:
  kwarg_1: value
  # More key word arguments for the environment...

dataset: DatasetName from datasets/__init__.py
dataset_kwargs:

validation_dataset_kwargs:
  # If you want a validation dataset, specify the kwargs here
  # If none are specified, there will be no validation dataset.

processor: ProcessorName from processors/__init__.py or null
# Note that unlike other configuration types, the processor is unnecesary.
processor_kwargs:
  kwarg_1: value
  # More key word arguments for the processor

schedule: linear_decay # Schedule function from utils/schedules.py can be null.
schedule_kwargs:
  # if a scheduler is specified, specify its kwargs here.
  # total_steps is alwasy passed into it as the first argument.

checkpoint: null # A checkpoint to initialize the network from.

trainer_kwargs: # Arguments given to Algorithm.train
  total_steps: 10000 # The total number of steps to train
  log_freq: 25 # How often to log values
  profile_freq: 10 # How often to time different componetns
  eval_freq: 500 # How often to run evals
  max_validation_steps: 100 # Maximum number of steps from the validation dataset, if included
  loss_metric: loss # The validation metric that determines when to save the "best_checkpoint"
  eval_fn: eval_policy # evaluation function to run
  eval_kwargs:
    num_ep: 10 # Evaluation kwargs
  train_dataloader_kwargs:
    workers: 2
    batch_size: 64
  validation_dataloader_kwargs:
    workers: 0
  benchmark: False # whether or not to enable torch.cuddn.benchmark
  torch_compile: False # wether or not to use torch compile. Currently exhibits bugs -- waiting for real release.
  torch_compile_kwargs:
    mode: null # set torch compile key word args.

seed: null # For manually setting the seed.
