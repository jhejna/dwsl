alg: DWSL
alg_kwargs:
  alpha: 1.0
  beta: 0.05
  clip_score: 10
  encoder_gradients: actor

optim: Adam
optim_kwargs:
  lr: 0.0003

network: ActorValuePolicy
network_kwargs:
  encoder_class: RobomimicEncoder
  encoder_kwargs:
    pretrain: supervised
    num_kp: 128
    backbone: 34
  actor_class: ContinuousMLPActor
  actor_kwargs:
    output_act: ["import", "torch.nn", "Tanh"]
    hidden_layers: [1024, 1024]
  value_class: DiscreteMLPDistance
  value_kwargs:
    hidden_layers: [1024, 1024]
    ensemble_size: 1
    bins: 64

# No train env, only eval env
eval_env: GoalConditionedWidowXEnv

dataset: BridgeDataset
dataset_kwargs:
  path: /iliad/group/datasets/bridge_data/numpy_fixed
  discount: 1.0
  reward_fn: ["import", "research.envs.gym_robotics", "fetch_dummy"]
  batch_size: 256
  relabel_fraction: 1.0
  train: True
  capacity: 800000
  fetch_every: 50
  alloc_goal: False

processor: ComposeProcessor
processor_kwargs:
  processors: # Format is List[Tuple(Name, kwargs)]
   -
    - RandomCrop
    -
      size: [112, 112]
      pad: 0
   -
    - ConcatenateProcessor
    -
      obs_dim: 0

schedule: null # A learning rate schedule
checkpoint: null # A checkpoint to initialize the model from

trainer_kwargs: # Arguments given to Algorithm.train
  total_steps: 4000000
  log_freq: 100 # How often to log values
  eval_freq: 10000 # How often to run evals
  eval_fn: null
  loss_metric: actor_loss
  train_dataloader_kwargs:
    num_workers: 4 # Number of dataloader workers.
    batch_size: null
    collate_fn: null
  profile_freq: 500
  benchmark: True
  seed: null
